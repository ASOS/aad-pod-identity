# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

executors:
  go-executor:
    docker:
      - image: circleci/golang:1.11.2
    working_directory: /go/src/github.com/Azure/aad-pod-identity

jobs:

  build-and-run-unit-tests:
    executor: go-executor
    steps:
      - checkout

      - run: go get -v -t -d ./...
      - run: go test -v $(go list ./... | grep -v test/e2e)


  run-e2e-tests:
    executor: go-executor
    steps:
      - checkout
      
      - run: go get -v -t -d ./...
      - run: make build
      
      # For security purposes, circleci requires this step to isolate remote docker commands. 
      # More info at: https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker

      - run: |
          docker login -u $DOCKER_REGISTRY_SERVER_USERNAME -p $DOCKER_REGISTRY_SERVER_PASSWORD
          make image
          make push

      - run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - run: |
          echo $AKS_CLUSTER_CA_DATA > cluster.ca.crt
          kubectl config set-cluster e2e --server=$AKS_CLUSTER --certificate-authority=cluster.ca.crt

          echo $AKS_CLUSTER_CLIENT_CERT > client.crt
          echo $AKS_CLUSTER_CLIENT_KEY > key.crt
          kubectl config set-credentials clusterUser --client-certificate=client.crt --client-key=key.crt --embed-certs=true --token=$AKS_CLUSTER_CLIENT_TOKEN

          kubectl config set-context e2e-context --current --cluster=e2e --user=clusterUser

      - run: make e2e


workflows:
  version: 2
  build_and_test:
    jobs:
      - build-and-run-unit-tests

      - run-e2e-tests